#Solution 1

class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        
        unordered_map<int, int> pairs;

        for (int i=0; i < nums.size(); i++) {

            auto it = pairs.find(nums[i]);

            if (it != pairs.end()) {
                return true;
            }

            pairs.insert({nums[i], i});
        }

        return false;
    }
};

===================================

#Solution 2

class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        
        unordered_set<int> numSet;

        for (int n : nums) {

            if (numSet.find(n) != numSet.end()) {
                return true;
            }

            numSet.insert(n);
        }

        return false;
    }
};
